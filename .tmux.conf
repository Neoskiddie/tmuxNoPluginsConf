# use zsh as default shell
#set-option -g default-shell /bin/zsh

# Use a 256 color terminal.
set -g default-terminal "screen-256color"
set -g history-limit 20000 # boost history

# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line

# open panes in current directory
# Without this it was always annoying
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# `sudo pacman -S xsel` or `sudo apt install xsel`
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel --input --clipboard'

# uncomment if using xclip istead of xsel
#bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# enable mouse support - splitting etc
set -g mouse on

# update things every second - used for example with date taime for displaying seconds
set -g status-interval 1


# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# change the colour of the main tmux bar
set-option -g status-style fg=colour6,bg=colour235
set -g pane-border-style fg=#2596be
set -g pane-active-border-style fg=#9AD0C2

set-option -g status-justify centre
set-option -g status-left-length 20
set-option -g status-left-style default
set -g status-right-length 140

# left part of status bar with hostname and distro
set-option -g status-left "#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r)#[default]"

# Customize status line (indicates Caps lock on, power supply)
set -g status-right "#(\
if [ -e $(find /sys/class/leds -name "*capslock"|head -1)/brightness ]\
        && [ $(cat $(find /sys/class/leds -name\
            "*capslock"|head -1)/brightness) != 0 ]; then\
    printf '#[fg=colour184]Caps Lock on#[default] | ';\
else\
    printf '               ';\
fi;\

if [ -e /sys/class/power_supply/AC/online ]; then\
    if [ $(cat /sys/class/power_supply/AC/online) = 1 ]; then\
        printf 'CHG ';\
    else\
        printf 'BAT ';\
    fi;\
else\
    printf '    ';\
fi;\
if [ -e /sys/class/power_supply/BAT0/capacity ]; then\
    if [ -e /sys/class/power_supply/AC/online ]\
            && [ $(cat /sys/class/power_supply/AC/online) != 1 ]\
            && [ $(cat /sys/class/power_supply/BAT0/capacity) -lt 20 ]; then\
        printf '#[fg=colour184]% 3d%%%#[default] | ' \
            $(cat /sys/class/power_supply/BAT0/capacity);\
    else\
        printf '#[default]% 3d%%%#[default] | ' $(cat /sys/class/power_supply/BAT0/capacity);\
    fi;\
else\
    printf '    ';\
fi;\
)"

# CPU temperature, might be wrong depending on your setup
set -ag status-right "#[fg=colour2]#(temp=$(sensors | awk '/^Package id 0:/ {print +$4}'); if [ \"\$temp\" -lt 60 ]; then echo \"#[fg=green]\$temp°C\"; elif [ \"\$temp\" -lt 80 ]; then echo \"#[fg=yellow]\$temp°C\"; else echo \"#[fg=red]\$temp°C\"; fi)"


# CPU usage based on top command
#set -ag status-right "#[default]| CPU #(top -bn2 | grep 'Cpu(s)' | tail -n 1 | sed 's/.*, *\\([0-9.]*\\)%* id.*/\\1/' | awk '{print 100 - $1\"%\"}')"
set -ag status-right "#[default] | #(top -bn2 | grep 'Cpu(s)' | tail -n 1 | sed 's/.*, *\\([0-9.]*\\)%* id.*/\\1/' | awk '{printf(\"CPU%5.2f%%\", 100 - $1)}')"

# RAM usage using free
#set -ag status-right "#[default] | #(free | awk '/Mem:/ {printf(\"RAM %.2f%%\", $3/$2 * 100.0)}')"
set -ag status-right "#[default] | #(free | awk '/Mem:/ {printf(\"RAM%5.2f%%\", $3/$2 * 100.0)}')"


# time and date
set -ag status-right " | #[fg=white,bg=default]%H:%M:%S#[default] #[fg=blue] %a %Y-%m-%d"

